SELECT * FROM USER_TABLES;

-- DDL (Data Definition Language)
-- Object -> create, alter, drop

-- Object type -> table, view, sequence, index, package, procedual, function, trigger, synonym, user
-- Data types -> char, varchar2, number, number(how long), date, long, lob, rowid, bfile, timsetamp,
-- 								interval year to month, interval date to secont
-- BLOB : (2진법)4gb
-- CLOB : (char)4gb

-- char(9) - hello -> hello****
-- char(3) - hello -> error

-- varchar2(10) - hello

-- number -> all decimal
-- number(7) -> decimal X
-- number(7, 1) -> 1 decimal
-- number(7, -1) -> round up 1 digit
-- number (4, 5) -> 0.01234

-- MEMBER table
CREATE TABLE "MEMBER" (
MEMBER_ID VARCHAR2(20),
MEMBER_PW VARCHAR2(20),
MEMBER_NAME VARCHAR2(30),
MEMBER_SSN CHAR(14),
ENTROLL_DATE DATE DEFAULT SYSDATE
);

SELECT * FROM MEMBER;

-- comment
COMMENT ON COLUMN MEMBER.MEMBER_ID IS 'Username';
COMMENT ON COLUMN MEMBER.MEMBER_PW IS 'User Password';
COMMENT ON COLUMN MEMBER.MEMBER_Name IS 'Name';
COMMENT ON COLUMN MEMBER.MEMBER_SSN IS 'Social Security Number';
COMMENT ON COLUMN MEMBER.ENTROLL_DATE IS 'Register Date';

INSERT INTO "MEMBER" VALUES ('MEM01', '123ABC', '홍길동', 991212-1234567, DEFAULT);
INSERT INTO "MEMBER" VALUES ('MEM02', 'ABC123', '김스퀴드', 910530-1212245, SYSDATE);

UPDATE "MEMBER" SET MEMBER_SSN  = '991212-1234567' WHERE MEMBER_ID = 'MEM01';
UPDATE "MEMBER" SET MEMBER_SSN  = '910530-1212245' WHERE MEMBER_ID = 'MEM02';
COMMIT;
SELECT * FROM MEMBER;
INSERT INTO "MEMBER" (MEMBER_ID,MEMBER_PW,MEMBER_NAME,MEMBER_SSN) VALUES ('MEM03', '134asw', '장스퀴드', '900120-2315635');
ROLLBACK;

INSERT INTO "MEMBER" VALUES ('MEM04', 'PASS04', '정스퀴드', '921121-1454567', 
TO_DATE('2022-09-13 17:33:27', 'YYYY-MM-DD HH24:MI:SS'));

CREATE TABLE MEMBER2(
MEMBER_ID VARCHAR2(20),
MEMBER_PW VARCHAR2(20),
MEMBER_NAME VARCHAR2(30),
MEMBER_TEL NUMBER
);

INSERT INTO "MEMBER2" VALUES ('MEM01', 'PASS01', '정스퀴드', 771234123); 
INSERT INTO "MEMBER2" VALUES ('MEM02', 'PASS02', '김스퀴드', 01012446234); 

SELECT * FROM MEMBER2;

-- Constraints

--DESC USER_CONSTRAINTS;

-- NOT NULL
SELECT * FROM USER_CONSTRAINTS;


CREATE TABLE USER_USED_NN(
USER_NO NUMBER NOT NULL,
USER_ID VARCHAR2(20),
USER_PW VARCHAR2(30),
USER_NAME VARCHAR2(30),
GENDER VARCHAR2(10),
PHONE VARCHAR2(30),
EMAIL VARCHAR2(50)
);

SELECT * FROM USER_USED_NN;

INSERT INTO USER_USED_NN VALUES (1,'USER01','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr');
INSERT INTO USER_USED_NN VALUES (2,'USER01','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr');

-- UNIQUE

CREATE TABLE USER_USED_UK (
USER_NO NUMBER,
--USER_ID VARCHAR2(20) UNIQUE,
--USER_PW VARCHAR2(30) CONSTRAINT USER_PW_U UNIQUE,
USER_ID VARCHAR2(20),
USER_PW VARCHAR2(30),
USER_NAME VARCHAR2(30),
GENDER VARCHAR2(10),
PHONE VARCHAR2(30),
EMAIL VARCHAR2(50),
--UNIQUE (USER_ID)
CONSTRAINT USER_ID_U UNIQUE(USER_ID)
);

ROLLBACK;
SELECT * FROM USER_USED_UK;
DROP TABLE USER_USED_UK;

INSERT INTO USER_USED_UK VALUES (1,'USER01','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr');
INSERT INTO USER_USED_UK VALUES (1,NULL,'PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr');

CREATE TABLE USER_USED_UK2(
USER_NO NUMBER,
USER_ID VARCHAR2(20),
USER_PW VARCHAR2(30),
USER_NAME VARCHAR2(30),
GENDER VARCHAR2(10),
PHONE VARCHAR2(30),
EMAIL VARCHAR2(50),
CONSTRAINT USER_ID_NAME_U UNIQUE (USER_ID, USER_NAME)
);

SELECT * FROM USER_USED_UK2;

INSERT INTO USER_USED_UK2 VALUES (1,'USER01','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr');
INSERT INTO USER_USED_UK2 VALUES (2,'USER02','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr');
INSERT INTO USER_USED_UK2 VALUES (3,'USER02','PASS01','김스퀴드','Male','010-1234-5678','hong123@kh.or.kr');

-- PRIMARY KEY

-- 1 PK per Table

CREATE TABLE USER_USED_PK(
USER_NO NUMBER,
USER_ID VARCHAR2(20),
USER_PW VARCHAR2(30),
USER_NAME VARCHAR2(30),
GENDER VARCHAR2(10),
PHONE VARCHAR2(30),
EMAIL VARCHAR2(50),
CONSTRAINT USER_ID_NAME_PK PRIMARY KEY (USER_ID, USER_NAME)
);

INSERT INTO USER_USED_PK VALUES (1,'USER01','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr');
INSERT INTO USER_USED_PK VALUES (1,'USER02','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr');
INSERT INTO USER_USED_PK VALUES (1,'USER02','PASS01','Gerrald','Male','010-1234-5678','hong123@kh.or.kr');
INSERT INTO USER_USED_PK VALUES (1,'USER02','PASS01', NULL,'Male','010-1234-5678','hong123@kh.or.kr');

SELECT * FROM USER_USED_PK;

-- Foreign Key

CREATE TABLE USER_GRADE(
GRADE_CODE NUMBER PRIMARY KEY,
USER_NAME VARCHAR2(30) NOT NULL
);

INSERT INTO USER_GRADE VALUES (10, '일반회원');
INSERT INTO USER_GRADE VALUES (20, '우수회원');
INSERT INTO USER_GRADE VALUES (30, '특별회원');

SELECT * FROM USER_GRADE;

CREATE TABLE USER_USED_FK (
USER_NO NUMBER PRIMARY KEY,
USER_ID VARCHAR2(20) UNIQUE,
USER_PW VARCHAR2(30) NOT NULL,
USER_NAME VARCHAR2(30),
GENDER VARCHAR2(10),
PHONE VARCHAR2(30),
EMAIL VARCHAR2(50),
GRADE_CODE NUMBER CONSTRAINT GRADE_CODE_FK REFERENCES USER_GRADE 
--CONSTRAINT GRADE_CODE_FK FOREIGN KEY (GRADE_CODE) REFERENCES USER_GRADE
);

SELECT * FROM USER_USED_FK;
COMMIT;

INSERT INTO USER_USED_FK VALUES (1,'USER01','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr', 10);
INSERT INTO USER_USED_FK VALUES (2,'USER02','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr', 20);
INSERT INTO USER_USED_FK VALUES (3,'USER03','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr', 30);
INSERT INTO USER_USED_FK VALUES (4,'USER04','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr', NULL);

COMMIT;

CREATE TABLE USER_GRADE2(
GRADE_CODE NUMBER PRIMARY KEY,
USER_NAME VARCHAR2(30) NOT NULL
);

INSERT INTO USER_GRADE2 VALUES (10, '일반회원');
INSERT INTO USER_GRADE2 VALUES (20, '우수회원');
INSERT INTO USER_GRADE2 VALUES (30, '특별회원');

SELECT * FROM USER_GRADE2;

CREATE TABLE USER_USED_FK2 (
USER_NO NUMBER PRIMARY KEY,
USER_ID VARCHAR2(20) UNIQUE,
USER_PW VARCHAR2(30) NOT NULL,
USER_NAME VARCHAR2(30),
GENDER VARCHAR2(10),
PHONE VARCHAR2(30),
EMAIL VARCHAR2(50),
GRADE_CODE NUMBER CONSTRAINT GRADE_CODE_FK2 REFERENCES USER_GRADE2 ON DELETE SET NULL
--CONSTRAINT GRADE_CODE_FK FOREIGN KEY (GRADE_CODE) REFERENCES USER_GRADE
);
DROP TABLE USER_USED_FK2;

INSERT INTO USER_USED_FK2 VALUES (1,'USER01','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr', 10);
INSERT INTO USER_USED_FK2 VALUES (2,'USER02','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr', 20);
INSERT INTO USER_USED_FK2 VALUES (3,'USER03','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr', 30);
INSERT INTO USER_USED_FK2 VALUES (4,'USER04','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr', NULL);

COMMIT;

SELECT * FROM USER_USED_FK2;

DELETE FROM USER_GRADE2 WHERE GRADE_CODE = 10;

CREATE TABLE USER_GRADE3(
GRADE_CODE NUMBER PRIMARY KEY,
USER_NAME VARCHAR2(30) NOT NULL
);

INSERT INTO USER_GRADE3 VALUES (10, '일반회원');
INSERT INTO USER_GRADE3 VALUES (20, '우수회원');
INSERT INTO USER_GRADE3 VALUES (30, '특별회원');

SELECT * FROM USER_GRADE3;

CREATE TABLE USER_USED_FK3 (
USER_NO NUMBER PRIMARY KEY,
USER_ID VARCHAR2(20) UNIQUE,
USER_PW VARCHAR2(30) NOT NULL,
USER_NAME VARCHAR2(30),
GENDER VARCHAR2(10),
PHONE VARCHAR2(30),
EMAIL VARCHAR2(50),
GRADE_CODE NUMBER,
CONSTRAINT GRADE_CODE_FK3 FOREIGN KEY (GRADE_CODE) REFERENCES USER_GRADE3 (GRADE_CODE) ON DELETE CASCADE
--CONSTRAINT GRADE_CODE_FK FOREIGN KEY (GRADE_CODE) REFERENCES USER_GRADE
);

INSERT INTO USER_USED_FK3 VALUES (1,'USER01','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr', 10);
INSERT INTO USER_USED_FK3 VALUES (2,'USER02','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr', 20);
INSERT INTO USER_USED_FK3 VALUES (3,'USER03','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr', 30);
INSERT INTO USER_USED_FK3 VALUES (4,'USER04','PASS01','홍길동','Male','010-1234-5678','hong123@kh.or.kr', NULL);

COMMIT;

SELECT * FROM USER_USED_FK3;

DELETE FROM USER_GRADE3 WHERE GRADE_CODE = 10;

CREATE TABLE USER_USED_CHECK (
USER_NO NUMBER PRIMARY KEY,
USER_ID VARCHAR2(20) UNIQUE,
USER_PW VARCHAR2(30) NOT NULL,
USER_NAME VARCHAR2(30),
GENDER VARCHAR2(10) CONSTRAINT GENDER_CHECK CHECK(GENDER IN ('M','F')),
PHONE VARCHAR2(30),
EMAIL VARCHAR2(50)
);
INSERT INTO USER_USED_CHECK VALUES (1,'USER01','PASS01','홍길동','M','010-1234-5678','hong123@kh.or.kr');
INSERT INTO USER_USED_CHECK VALUES (2,'USER02','PASS01','홍길동','F','010-1234-5678','hong123@kh.or.kr');

SELECT * FROM USER_USED_CHECK;


-- [연습 문제]
-- 회원가입용 테이블 생성(USER_TEST)
-- 컬럼명 : USER_NO(회원번호) - 기본키(PK_USER_TEST), 
--         USER_ID(회원아이디) - 중복금지(UK_USER_ID),
--         USER_PWD(회원비밀번호) - NULL값 허용안함(NN_USER_PWD),
--         PNO(주민등록번호) - 중복금지(UK_PNO), NULL 허용안함(NN_PNO),
--         GENDER(성별) - '남' 혹은 '여'로 입력(CK_GENDER),
--         PHONE(연락처),
--         ADDRESS(주소),
--         STATUS(탈퇴여부) - NOT NULL(NN_STATUS), 'Y' 혹은 'N'으로 입력(CK_STATUS)
-- 각 컬럼의 제약조건에 이름 부여할 것
-- 각 컬럼에 주석 달기
-- 5명 이상 INSERT할 것

CREATE TABLE USER_TEST (
USER_NO NUMBER CONSTRAINT PK_USER_TEST PRIMARY KEY,
USER_ID VARCHAR(20) CONSTRAINT UK_USER_ID UNIQUE,
USER_PW VARCHAR(30) CONSTRAINT NN_USER_PW NOT NULL,
PNO CHAR(14) CONSTRAINT UK_PNO UNIQUE CONSTRAINT NN_PNO NOT NULL,
GENDER VARCHAR(10) CONSTRAINT CK_GENDER CHECK(GENDER IN ('M', 'F')),
PHONE VARCHAR2(30),
ADDRESS VARCHAR(50),
STATUS VARCHAR(10) CONSTRAINT NN_STATUS NOT NULL CONSTRAINT CK_STATUS CHECK(STATUS IN ('Y', 'N')) 
);

COMMENT ON COLUMN USER_TEST.USER_NO IS '회원번호';
COMMENT ON COLUMN USER_TEST.USER_ID IS '회원아이디';
COMMENT ON COLUMN USER_TEST.USER_PW IS '회원비밀번호';
COMMENT ON COLUMN USER_TEST.PNO IS '주민등록번호';
COMMENT ON COLUMN USER_TEST.GENDER IS '성별';
COMMENT ON COLUMN USER_TEST.PHONE IS '연락처';
COMMENT ON COLUMN USER_TEST.ADDRESS IS '주소';
COMMENT ON COLUMN USER_TEST.STATUS IS '탈퇴여부';

INSERT INTO USER_TEST VALUES (1, 'USER01', 'PASS01', '910313-1223653', 'M', '010-1234-1234', '서울특별시 동대문구', 'N');
INSERT INTO USER_TEST VALUES (2, 'USER02', 'PASS02', '990130-2351653', 'F', '010-2222-3333', '서울특별시 성동구', 'N');
INSERT INTO USER_TEST VALUES (3, 'USER03', 'PASS03', '930113-1024653', 'M', '010-3333-2222', '서울특별시 서대문구', 'N');
INSERT INTO USER_TEST VALUES (4, 'USER04', 'PASS04', '990223-2451353', 'F', '010-3611-1633', '서울특별시 마포구', 'N');
INSERT INTO USER_TEST VALUES (5, 'USER05', 'PASS05', '001107-2013456', 'F', '010-6013-6176', '서울특별시 강서구', 'Y');

SELECT * FROM USER_TEST;

CREATE TABLE EMPLOYEE_2 AS SELECT * FROM EMPLOYEE;


--ALTER TABLE EMPLOYEE_2 ADD CONSTRAINT PK_EMP_COPY PRIMARY KEY (EMP_ID);

ALTER TABLE EMPLOYEE ADD CONSTRAINT EMP_DEPT_CODE
FOREIGN KEY(DEPT_CODE) REFERENCES DEPARTMENT ON DELETE SET NULL;

ALTER TABLE EMPLOYEE ADD CONSTRAINT EMP_JOB_CODE
FOREIGN KEY(JOB_CODE) REFERENCES JOB ON DELETE SET NULL;

ALTER TABLE EMPLOYEE ADD CONSTRAINT EMP_SAL_LEVEL
FOREIGN KEY(SAL_LEVEL) REFERENCES SAL_GRADE ON DELETE SET NULL;

ALTER TABLE DEPARTMENT ADD CONSTRAINT DEPT_LOCATION_ID
FOREIGN KEY(LOCATION_ID) REFERENCES LOCATION ON DELETE SET NULL;

ALTER TABLE LOCATION ADD CONSTRAINT LOCAL_NATIONAL_CODE
FOREIGN KEY (NATIONAL_CODE) REFERENCES "NATIONAL" ON DELETE SET NULL;


COMMIT;


