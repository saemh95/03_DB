SELECT * FROM EMPLOYEE;

/*
 * SELECT (DQL or DML)
 * - SELECT : columns are selected
 * result of the selected : "RESULT SET"
 * 
 * */

-- SELECT Column name FROM table name;
SELECT EMP_NAME, EMP_NO, PHONE  FROM EMPLOYEE;

-- column value
SELECT EMP_ID, EMP_NAME, SALARY, SALARY * 12 FROM EMPLOYEE;

SELECT EMP_NAME FROM EMPLOYEE;

-- DATE type
SELECT EMP_NAME, HIRE_DATE, SYSDATE FROM EMPLOYEE;

-- Date now

SELECT SYSDATE FROM DUAL;

-- DUAL (DUmmy tAbLe) : virtual table
SELECT SYSDATE -1, SYSDATE, SYSDATE +1 FROM DUAL;

-- COLUMN NAME AS name; 
SELECT SYSDATE -1 "하루 전", SYSDATE AS "오늘", SYSDATE +1 내일 FROM DUAL;

-- Literal : virtual data -> look like real data
-- use is with ''
SELECT EMP_NAME, SALARY, 'Won' FROM EMPLOYEE;

-- DISTINCT
-- only one in one SELECT
SELECT DISTINCT DEPT_CODE, JOB_CODE FROM EMPLOYEE;

-- WHERE;
SELECT EMP_NAME , DEPT_CODE, JOB_CODE, SAL_LEVEL, SALARY, SALARY * 12 AS "ANNUAL_SAL" FROM EMPLOYEE WHERE EMP_ID = 200;
SELECT EMP_NAME, SALARY, DEPT_CODE FROM EMPLOYEE WHERE SALARY > 3000000;
SELECT EMP_ID, EMP_NAME, DEPT_CODE, JOB_CODE FROM EMPLOYEE WHERE DEPT_CODE = 'D9';

-- not equals to (!= or <>)

-- employee table salary 300만 > or 500만 <
-- id, name, salary, phone

SELECT EMP_ID, EMP_NAME, SALARY, PHONE  FROM EMPLOYEE WHERE SALARY < 3000000 OR SALARY > 5000000;
SELECT EMP_ID, EMP_NAME, SALARY, PHONE  FROM EMPLOYEE WHERE SALARY > 3000000 AND SALARY < 5000000;
SELECT EMP_ID, EMP_NAME, SALARY, PHONE  FROM EMPLOYEE WHERE SALARY BETWEEN 2000000 AND 3500000;
SELECT EMP_ID, EMP_NAME, SALARY, PHONE  FROM EMPLOYEE WHERE SALARY NOT BETWEEN 2000000 AND 3500000;

SELECT EMP_NAME, HIRE_DATE FROM EMPLOYEE WHERE HIRE_DATE BETWEEN TO_DATE('1990-01-01', 'YYYY-MM-DD') AND TO_DATE('1999-12-31', 'YYYY-MM-DD');
SELECT EMP_NAME, HIRE_DATE FROM EMPLOYEE WHERE HIRE_DATE BETWEEN '01-01-1990' AND '12-31-1999';

SELECT 'SAME' FROM DUAL WHERE  1 = '1';

-- LIKE

-- '%' 예시
-- 'A%' : A로 시작하는 문자열
-- '%A' : A로 끝나는 문자
-- '%A%' : A를 포함

-- '_' 예시
-- 'A_' : A로 시작하는 두글자
-- '___A' : A로 끝나는 네글자
-- '__A__' : 세번째 분자가 A인 다섯글자 문자
-- '_____' : 5글자

SELECT EMP_ID, EMP_NAME FROM EMPLOYEE WHERE EMP_NAME LIKE '전%';

SELECT EMP_ID, EMP_NAME, PHONE FROM EMPLOYEE WHERE PHONE LIKE '010%';
SELECT EMP_ID, EMP_NAME, PHONE FROM EMPLOYEE WHERE PHONE NOT LIKE '010%';

SELECT EMP_NAME, EMAIL FROM EMPLOYEE WHERE EMAIL LIKE '____%';
SELECT EMP_NAME, EMAIL FROM EMPLOYEE WHERE EMAIL LIKE '___/_%' ESCAPE '/';

-- 연습문제
-- EMPLOYEE 테이블에서 
-- 이메일 '_' 앞이 4글자 이면서
-- 부서코드가 'D9' 또는 'D6'이고  -> AND가 OR보다 우선순위가 높다, () 사용 가능
-- 입사일이 1990-01-01 ~ 2000-12-31 이고
-- 급여가 270만 이상인 사원의
-- 사번, 이름, 이메일, 부서코드, 입사일, 급여 조회

SELECT EMP_ID, EMP_NAME, EMAIL, DEPT_CODE, HIRE_DATE, SALARY FROM EMPLOYEE 
WHERE EMAIL LIKE '____/_%' ESCAPE '/' AND (DEPT_CODE = 'D9' OR DEPT_CODE = 'D6')
AND (HIRE_DATE BETWEEN TO_DATE('1990-01-01', 'YYYY-MM-DD') AND TO_DATE('2000-12-31', 'YYYY-MM-DD'))
AND (SALARY > 2700000);

-- 0. ()
-- 1. +, -, *, /
-- 2. ||
-- 3. >, <, <=, >=
-- 4. IS NULL / IS NOT NULL / LIKE / IN / NOT IN 
-- 5. BETWEEN AND / NOT BETWEEN AND
-- 6. NOT (boolean)
-- 7. AND (boolean)
-- 8. OR (boolea)

-- in

-- WHERE Col name IN(v1, v2, v3)

-- WHERE Col name = v1
-- OR Col name = v2
-- OR Col name = v3

SELECT EMP_ID, EMP_NAME, DEPT_CODE FROM EMPLOYEE WHERE DEPT_CODE IN ('D1', 'D6', 'D9');

SELECT EMP_ID, EMP_NAME, DEPT_CODE FROM EMPLOYEE WHERE DEPT_CODE NOT IN ('D1', 'D6', 'D9') OR DEPT_CODE IS NULL;

-- IS NULL = no value in a data

SELECT EMP_NAME, BONUS FROM EMPLOYEE WHERE BONUS IS NOT NULL;

-- ORDER BY

--CODE READING ORDER

--3.SELECT
--1.FROM
--2.WHERE
--4.ORDER BY

SELECT EMP_ID, EMP_NAME, EMP_NO FROM EMPLOYEE WHERE EMP_NO LIKE '7%' ORDER BY EMP_NAME;

SELECT EMP_ID, EMP_NAME, SALARY FROM EMPLOYEE WHERE SALARY >= 2000000 ORDER BY 3 DESC;

SELECT EMP_NAME AS "NAME", HIRE_DATE "DATE" FROM EMPLOYEE ORDER BY "DATE";

SELECT EMP_NAME, DEPT_CODE , SALARY FROM EMPLOYEE ORDER BY 2, 3 DESC;

