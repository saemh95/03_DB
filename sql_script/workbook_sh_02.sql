ALTER SESSION SET NLS_DATE_FORMAT = 'yyyy-MM-dd';
-- 1. student name / student address 
SELECT STUDENT_NAME AS "학생 이름", STUDENT_ADDRESS AS "주소지" FROM TB_STUDENT ORDER BY STUDENT_NAME ;
-- 2. student not currently going
SELECT STUDENT_NAME, STUDENT_SSN FROM TB_STUDENT WHERE ABSENCE_YN = 'Y' ORDER BY STUDENT_SSN DESC;
-- 3. stu address = 경기도 / stu stardate 1900
-- 주소지가 강원도나 경기도인 학생들 중 1900년대 학번을 가진 학생들의 이름과 학번,
-- 주소를 이름의 오름차순으로 화면에 출력
-- ex. STUDENT_NAME/ 학번 (ENTRACE_DATE) / STUDENT_ADDRESS : 김계영 / 9919024 / 경기도 용인시 etc
SELECT STUDENT_NAME AS 학생이름, STUDENT_NO AS "학번", 
STUDENT_ADDRESS AS "거주지 주소" 
FROM TB_STUDENT s
WHERE (STUDENT_ADDRESS LIKE '강원도%' OR STUDENT_ADDRESS LIKE '경기도%') 
AND EXTRACT(YEAR FROM ENTRANCE_DATE) BETWEEN 1900 AND 1999
ORDER BY STUDENT_NAME ;


-- 4. law professor age ->
SELECT PROFESSOR_NAME, PROFESSOR_SSN FROM TB_PROFESSOR
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '법학과'
ORDER BY PROFESSOR_SSN;

-- 5. 2004년 2학기 'C3118100' 학점 -> 높은 학점 if 학점 same 학번 낮은 학생부터 표시
SELECT STUDENT_NO, g.POINT FROM TB_STUDENT s
JOIN TB_GRADE g USING(STUDENT_NO)
WHERE TERM_NO = '200402'
AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC;

-- 6. 
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

-- 7. 
SELECT CLASS_NAME, DEPARTMENT_NAME FROM TB_CLASS
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO);

-- 8. professor by class name
SELECT CLASS_NAME, PROFESSOR_NAME FROM TB_CLASS_PROFESSOR
JOIN TB_CLASS USING (CLASS_NO)
JOIN TB_PROFESSOR USING (PROFESSOR_NO)
ORDER BY PROFESSOR_NAME;

-- 9. 
SELECT c.CLASS_NAME, p.PROFESSOR_NAME FROM TB_CLASS_PROFESSOR cp
JOIN TB_CLASS c USING (CLASS_NO)
JOIN TB_PROFESSOR p ON (cp.PROFESSOR_NO = p.PROFESSOR_NO)
JOIN TB_DEPARTMENT d ON (p.DEPARTMENT_NO = d.DEPARTMENT_NO)
WHERE d.CATEGORY = '인문사회'
ORDER BY p.PROFESSOR_NAME ;

-- 10. 음학학과 point ROUND
SELECT STUDENT_NO AS "학번", STUDENT_NAME AS "학생 이름", ROUND(AVG(POINT), 1) AS "전체 평점" FROM TB_STUDENT
JOIN TB_GRADE USING (STUDENT_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY ROUND(AVG(POINT), 1) DESC;

-- 11. STUDENT_NO 'A313047'
SELECT DEPARTMENT_NAME, STUDENT_NAME, PROFESSOR_NAME FROM TB_STUDENT s
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE s.STUDENT_NO = 'A313047';

-- 12. 인간관계론 - 2007

SELECT STUDENT_NAME, TERM_NO AS TERM_NAME FROM TB_STUDENT
JOIN TB_GRADE USING (STUDENT_NO)
JOIN TB_CLASS USING (CLASS_NO)
WHERE TERM_NO LIKE '2007%' AND CLASS_NO = 'C2604100';

-- 13. 예체능 계열 과목 중 과목 담당교수를 한명도 배정받지 못한 과목을 찾아 그 과목과 이름과 학과이름을 출력
-- 예체능 계열 과목 중 과목 담당교수를 한 명도 배정받지 못한 과목을 찾아
-- 그 과목 이름과 학과 이름을 출력
-- ex. CLASS_NAME / DEPARTMENT_NAME : 논문지도 1 / 미술학고

SELECT c.CLASS_NAME, d.DEPARTMENT_NAME FROM TB_CLASS c
LEFT JOIN TB_DEPARTMENT d ON c.DEPARTMENT_NO = d.DEPARTMENT_NO
LEFT JOIN TB_CLASS_PROFESSOR cp ON c.CLASS_NO = cp.CLASS_NO
WHERE d.CATEGORY IN '예체능' AND cp.PROFESSOR_NO IS NULL;



-- 14. 서반아어학과 학생들의 지도교수를 게시. 학생 이름과 지도교수 이름을 찾고
-- 만일 지도 교수가 없는 학생일 경우 "지도교수 미지정" 으로 표시하도록

SELECT STUDENT_NAME AS "학생이름", NVL(PROFESSOR_NAME, '지도교수 미지정') AS "지도교수" FROM TB_STUDENT
LEFT JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
LEFT JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO;

-- 15. 휴학생이 X 학생 평점 4.0 < 학생
-- 휴학생이 아닌 학생 중 평점이 4.0 이상인 학생을 찾아 그 학생의 학번, 이름, 학과 이름, 평점을 출려
-- ex. 학번 / 이름 / 학과 이름 / 평점 : 9811251 / 김충원 / 건축공학과 / 4.111111

SELECT s.STUDENT_NO AS "학번", s.STUDENT_NAME AS "이름", d.DEPARTMENT_NAME AS "학과 이름", TRUNC(AVG(g.POINT), 8) AS "평점"
FROM TB_STUDENT s
JOIN TB_DEPARTMENT d ON s.DEPARTMENT_NO = d.DEPARTMENT_NO
JOIN TB_GRADE g ON s.STUDENT_NO = g.STUDENT_NO
WHERE s.ABSENCE_YN = 'N'
GROUP BY s.STUDENT_NO, s.STUDENT_NAME, d.DEPARTMENT_NAME
HAVING AVG(g.POINT) >= 4.0
ORDER BY s.STUDENT_NO;

-- 16. 한경조경학과 전공과목들의 과목별 평점을 파악

SELECT CLASS_NO, CLASS_NAME, TRUNC(AVG(POINT), 8) AS AvgPoint FROM TB_CLASS
JOIN TB_GRADE USING (CLASS_NO)
WHERE CLASS_TYPE = '전공선택'
AND DEPARTMENT_NO = '034'
GROUP BY CLASS_NO, CLASS_NAME;